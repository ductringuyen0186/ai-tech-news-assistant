# AI Tech-News Assistant - Comprehensive .gitignore
# Covers Python, Node.js, Docker, and OS-specific files

# =======================
# Python
# =======================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
# Note: Python lib/ directories only, not frontend source
**/lib/
!frontend/src/lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =======================
# Node.js
# =======================
# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# =======================
# Docker
# =======================
# Docker compose override files
docker-compose.override.yml
docker-compose.*.yml
!docker-compose.yml
!docker-compose.*.example.yml

# Docker volumes
.docker/

# Container runtime files
*.dockerignore

# =======================
# AI/ML Specific
# =======================
# Model files (large binary files)
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.bin
*.onnx
*.pb
*.pth
*.pt
*.ckpt

# Dataset files
*.csv
*.tsv
*.json
*.jsonl
*.parquet
datasets/
data/raw/
data/processed/

# Allow .copilot configuration files
!.copilot/
!.copilot/*.json

# Allow package-lock.json for consistent dependencies
!package-lock.json
!frontend/package-lock.json

data/external/

# MLflow artifacts
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# TensorBoard logs
logs/
tensorboard/

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# =======================
# IDE and Editor Files
# =======================
# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# JetBrains IDEs
.idea/
*.swp
*.swo
*~

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
.vim/
*.vim

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =======================
# Operating System Files
# =======================
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# =======================
# Cloud and Deployment
# =======================
# AWS
.aws/

# Google Cloud
.gcloud/
gcloud-service-key.json

# Azure
.azure/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry

# =======================
# Temporary and Log Files
# =======================
# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Log files
*.log
*.out
*.err

# Backup files
*.bak
*.backup
*.old

# =======================
# Security and Secrets
# =======================
# Environment files with secrets
.env.local
.env.development
.env.test
.env.production
.env.staging

# API keys and credentials
credentials.json
secrets.json
*.pem
*.key
*.crt
*.csr

# OAuth tokens
token.json
refresh_token.json

# =======================
# Build and Distribution
# =======================
# Build artifacts
build/
dist/
out/
target/

# Compiled output
*.com
*.class
*.dll
*.exe
*.o
*.so

# Package files
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# =======================
# Database
# =======================
# SQLite databases
*.db
*.sqlite
*.sqlite3

# Database dumps
*.sql
*.dump

# =======================
# Testing
# =======================
# Test results
test-results/
coverage/
.nyc_output/

# Screenshot and video artifacts from testing
screenshots/
videos/
test-artifacts/

# =======================
# Monitoring and Metrics
# =======================
# Prometheus data
prometheus/

# Grafana data
grafana/

# Application metrics
metrics/

# =======================
# Custom Application Files
# =======================
# News data cache
news_cache/
articles_cache/

# User uploads
uploads/
media/

# Generated reports
reports/
exports/

# Configuration overrides
config.local.yml
config.local.json
local_config.py

# Performance profiling
*.prof
profiling/

# =======================
# Temporary Documentation
# =======================
# PR descriptions (create them when needed, don't commit)
PR_DESCRIPTION.md
PULL_REQUEST_TEMPLATE.md.tmp

# Issue tracking documents (use GitHub issues instead)
ISSUE_*_TASKS.md
TASK_*.md

# One-time reports and summaries
*_SUMMARY.md
*_REPORT.md
*_COMPLETE.md
PROGRESS_REPORT.md
REFACTORING_COMPLETE.md
REVERT_SUMMARY.md

# Personal notes and scratch files
NOTES.md
SCRATCH.md
TODO.md
TEMP*.md

# Keep important docs (negative pattern to override above)
!README.md
!docs/**/*.md
!.github/**/*.md